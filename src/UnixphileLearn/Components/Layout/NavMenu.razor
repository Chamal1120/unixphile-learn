@using Microsoft.VisualBasic
@inject AuthenticationStateProvider AuthenticationStateProvider

<nav>
    <div class="navbar shadow-sm">
        <div class="navbar-start">
            <div class="dropdown">
                <div tabindex="0" role="button" class="btn btn-ghost lg:hidden">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24"
                        stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M4 6h16M4 12h8m-8 6h16" />
                    </svg>
                </div>
                <ul tabindex="-1"
                    class="menu menu-sm dropdown-content bg-base-100 rounded-box z-1 mt-3 w-52 p-2 shadow">
                    <li>
                        <NavLink href="/browse">Browse</NavLink>
                    </li>
                    <li>
                        <NavLink href="/categories">Categories</NavLink>
                        <ul class="p-2">
                            <li>
                                <NavLink href="/categories/devops">DevOps</NavLink>
                            </li>
                            <li>
                                <NavLink href="/categories/low-level">Low-Level</NavLink>
                            </li>
                        </ul>
                    </li>
                    <li>
                        <NavLink href="/support">Support</NavLink>
                    </li>
                    @if (isAuthenticated)
                    {
                        <li>
                            <NavLink href="/logout">Logout</NavLink>
                        </li>
                    }
                    else
                    {
                        <li>
                            <NavLink href="/login">Login</NavLink>
                        </li>
                    }
                </ul>
            </div>
            <NavLink class="btn btn-ghost text-xl" href="/">UnixPhile Learn</NavLink>
        </div>
        <div class="navbar-end hidden sm:flex">
            <ul class="menu menu-horizontal px-1">
                <li>
                    <NavLink href="/browse">Browse</NavLink>
                </li>
                <li>
                    <details>
                        <summary>Categories</summary>
                        <ul class="p-2">
                            <li>
                                <NavLink href="/categories/devops">DevOps</NavLink>
                            </li>
                            <li>
                                <NavLink href="/categories/low-level">Low-Level</NavLink>
                            </li>
                        </ul>
                    </details>
                </li>
                <li>
                    <NavLink href="/support">Support</NavLink>
                </li>
                @if (isAuthenticated)
                {
                    <li>
                        <NavLink href="/logout">Logout</NavLink>
                    </li>
                }
                else
                {
                    <li>
                        <NavLink href="/login">Login</NavLink>
                    </li>
                }
            </ul>
        </div>
        <div class="navbar-end flex gap-2 sm:w-fit">
            <input type="text" placeholder="Search Courses" class="hidden input input-bordered sm:w-auto" />
            @if (isAuthenticated)
            {
            <div class="dropdown dropdown-end">
                <div tabindex="0" role="button" class="btn btn-ghost btn-circle avatar">
                    <div class="w-6 rounded-full">
                        <img alt="" src="@userPicture" class="@(string.IsNullOrEmpty(userPicture) ? "invert" : "")" />
                    </div>
                </div>
                <ul tabindex="-1"
                    class="navbar-end menu menu-sm dropdown-content bg-base-100 rounded-box z-1 mt-3 w-52 p-2 shadow">
                    <li>
                        <NavLink href="/profile" class="justify-between">
                            Profile
                        </NavLink>
                    </li>
                    <li>
                        <NavLink href="/settings">Settings</NavLink>
                    </li>
                </ul>
            </div>

            }
        </div>
    </div>
</nav>


@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationStateTask { get; set; }
    private bool isAuthenticated;
    private string userPicture = "";

    protected override async Task OnInitializedAsync()
    {
        var state = await AuthenticationStateTask;
        var user = state.User;

        isAuthenticated = user.Identity?.IsAuthenticated ?? false;

        if (isAuthenticated)
        {
            userPicture = user.FindFirst(c => c.Type == "picture")?.Value ?? "/assets/user.png";
        }
    }
}
